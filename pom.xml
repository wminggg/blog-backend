<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--继承SpringBoot提供的父工程-->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!--基本信息-->
    <groupId>com.blog</groupId>
    <artifactId>blog-backend</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>blog-backend</name>

    <!--使用maven分模块管理-->
    <packaging>pom</packaging>

    <!--声明子模块-->
    <modules>
        <module>blog-api</module>
        <module>blog-common</module>
    </modules>

    <properties>
        <java.version>11</java.version>
        <spring-boot.version>2.7.2</spring-boot.version>
        <mysql.version>8.0.28</mysql.version>
        <mybatis.version>2.2.2</mybatis.version>
        <mybatis-plus.version>3.5.2</mybatis-plus.version>
        <knife4j.version>3.0.3</knife4j.version>
        <gson.version>2.9.1</gson.version>
        <hutool.version>5.8.8</hutool.version>
        <log4j.version>2.17.2</log4j.version>
        <pagehelper.version>1.4.6</pagehelper.version>
        <alibaba-druid.version>1.1.22</alibaba-druid.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <!--springBoot-->
        <!-- 提供了 FreeMarker 模板引擎的支持，用于在 Spring Boot Web 应用中生成动态内容 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-freemarker</artifactId>
        </dependency>
        <!-- 提供了构建 Web 应用程序所需的基本依赖项，包括 Spring MVC 和内嵌的 Web 服务器 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <!--使用undertow做web容器、排除tomcat
                    undertow的性能和内存使用都优于tomcat
                -->
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>
        <!-- 提供了对面向切面编程（AOP）的支持，用于处理横切关注点 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- 提供了用于编写单元测试和集成测试的基本依赖项 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- 用于生成 Spring Boot 配置元数据的处理器，提供配置补全和验证 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- 提供了开发工具支持，在开发过程中实现热部署和自动重启 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- mysql驱动 -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Druid 是一个用于数据库连接池和监控的工具，它可以提供高效、可靠的数据库连接管理 -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>${alibaba-druid.version}</version>
        </dependency>

        <!-- mybatis -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>${mybatis.version}</version>
        </dependency>
        <dependency>
            <groupId>com.baomidou</groupId>
            <artifactId>mybatis-plus-boot-starter</artifactId>
            <version>${mybatis-plus.version}</version>
        </dependency>

        <!-- redis -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.session</groupId>
            <artifactId>spring-session-data-redis</artifactId>
        </dependency>

        <!-- elasticsearch-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-elasticsearch</artifactId>
        </dependency>

        <!-- Knife4j是Swagger的增强版，用于生成API文档 -->
        <dependency>
            <groupId>com.github.xiaoymin</groupId>
            <artifactId>knife4j-spring-boot-starter</artifactId>
            <version>${knife4j.version}</version>
        </dependency>

        <!-- Apache Commons Lang 是一个工具类库，提供了许多用于操作字符串、数组、日期、文件等的实用方法 -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- Google Gson 是一个用于 Java 对象和 JSON 数据之间进行序列化和反序列化的库 -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- Hutool 是一个Java工具类库，提供了一些常用的工具方法 -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-all</artifactId>
            <version>${hutool.version}</version>
        </dependency>

        <!-- Project Lombok 是一个 Java 库，用于自动生成 Java 代码中的样板代码，如 Getter、Setter、构造函数等 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- 添加依赖：将 Log4j 的日志输出桥接到 SLF4J -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-to-slf4j</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- 添加依赖：Log4j 日志框架的 API 模块 -->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <!-- PageHelper 是一个用于分页的插件，可以与 MyBatis 集成，提供方便的分页功能 -->
        <dependency>
            <groupId>com.github.pagehelper</groupId>
            <artifactId>pagehelper-spring-boot-starter</artifactId>
            <version>${pagehelper.version}</version>
        </dependency>

    </dependencies>

</project>
